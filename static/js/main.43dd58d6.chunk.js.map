{"version":3,"sources":["components/Alert.js","components/Navbar.js","components/Textform.js","components/About.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","alert","react_default","a","createElement","className","concat","type","role","mstype","lower","toLowerCase","charAt","toUpperCase","slice","captialize","msg","Navbar","mode","dist","to","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggleMode","htmlFor","placeholder","Textform","_useState","useState","_useState2","Object","slicedToArray","text","setText","style","color","heading","value","backgroundColor","onChange","event","target","rows","newText","totalWords","length","split","count","About","myStyle","setMyStyle","_useState3","_useState4","btntext","setBtnText","aria-labelledby","data-bs-parent","border","App","setMode","setAlert","showAlert","message","setTimeout","Fragment","document","body","title","react_router_dist","path","element","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.43dd58d6.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const captialize = (mstype) => {\r\n        let lower = mstype.toLowerCase();\r\n        return lower.charAt(0).toUpperCase()+ lower.toLowerCase().slice(1);\r\n    }\r\n    return (\r\n        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{captialize(props.alert.type)}</strong> {props.alert.msg}\r\n            </div>\r\n  )\r\n}\r\n","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  \r\n  return (\r\n    <nav\r\n      className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n    >\r\n      <div className=\"container-fluid \">\r\n        <Link className=\"navbar-brand\" to=\"/\">\r\n          Textutils\r\n        </Link>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-Link active text-dark\" aria-current=\"page\" to=\"/\">\r\n                Home\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-Link text-dark mx-2\" to=\"/about\">\r\n                About\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n          <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n            <input\r\n              className=\"form-check-input\"\r\n              type=\"checkbox\"\r\n              onClick={props.toggleMode}\r\n              id=\"flexSwitchCheckDefault\"\r\n            />\r\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">\r\n            Enable Dark Mode\r\n            </label>\r\n          </div>\r\n          \r\n          \r\n          <form className=\"d-flex\" role=\"search\">\r\n            <input\r\n              className=\"form-control me-2\"\r\n              type=\"search\"\r\n              placeholder=\"Search\"\r\n              // eslint-disable-next-line\r\n              role=\"switch\"\r\n              aria-label=\"Search\"\r\n            />\r\n            <button className=\"btn btn-outline-success\" type=\"submit\">\r\n              Search\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n","import React,{useState} from \"react\";\r\n\r\nexport default function Textform(props) {\r\n    const handleUpClick = () => {\r\n\r\n        let newText = text.toUpperCase()\r\n        setText(newText);\r\n    }\r\n    const handleLoClick = () => {\r\n\r\n        let newText = text.toLowerCase()\r\n        setText(newText);\r\n    }\r\n    const handleClearClick = () => {\r\n\r\n      let newText = '';\r\n        setText(newText);\r\n    }\r\n    const handleOnChange = (event) => {\r\n        // console.log(\" On Change\")\r\n        setText(event.target.value)\r\n    }\r\n  \r\n  const count = (text) => {\r\n    let totalWords= 0;\r\n    if (text ===\" \" && text.length===0) {\r\n      totalWords = 0;\r\n     \r\n    } else {\r\n      if (text === \" \" && text.length===0) {\r\n        \r\n      } else {\r\n        totalWords = text.split(\" \").length\r\n      }\r\n    }\r\n    return totalWords;\r\n   }\r\n\r\n    const [text, setText] = useState(\"\");\r\n    return (\r\n    <div className=\"container my-3 \" style={{color:props.mode === 'dark' ? 'white':'black'}}>\r\n      <h3>{props.heading}</h3>\r\n      <div className=\"mb-3\">\r\n          <textarea className=\"form-control\" value={text} style={{ backgroundColor: props.mode === 'light' ? 'white':'grey',color:props.mode === 'dark' ? 'white':'black'}} onChange={handleOnChange} id=\"myBox\" rows=\"8\" placeholder=\"Enter your text here...\"></textarea>\r\n      <button className=\"btn btn-primary my-2\" onClick={handleUpClick}>Convert to Uppercase</button>\r\n      <button className=\"btn btn-primary my-2 mx-2\" onClick={handleLoClick}>Convert to LowerCase</button>\r\n      <button className=\"btn btn-primary my-2 mx-2\" onClick={handleClearClick}>Clear Text</button>\r\n      </div>\r\n      <div>\r\n            <h3>Your text summary</h3>\r\n            <p>{count(text)} words and {text.length} charactrs</p>\r\n                <h2>Preview</h2>\r\n                <p>{text}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React,{useState} from 'react'\r\n\r\nexport default function About() {\r\n\r\n    const [myStyle, setMyStyle] = useState(\r\n        {\r\n            color: 'black',\r\n            backgroundColor:'white'\r\n           \r\n        }\r\n    ) \r\n    const [btntext, setBtnText] = useState(\"Enable Dark Mode\");\r\n    const enableDarkMode = () => {\r\n        if (myStyle.color === \"black\") {\r\n            setMyStyle({\r\n                color: 'white',\r\n                backgroundColor: 'black',\r\n                border:'1px solid white'\r\n            })\r\n            setBtnText(\"Enable light mode\")\r\n        } else {\r\n            setMyStyle({\r\n                color: 'black',\r\n                backgroundColor:'white'\r\n               \r\n            })\r\n            setBtnText(\"Enable Dark mode\")\r\n        }\r\n      \r\n    }\r\n\r\n    return (\r\n      <div className='container' style={myStyle}>\r\n          <h1>About us</h1>\r\n        <div className=\"accordion accordion-flush\" id=\"accordionFlushExample\">\r\n    <div className=\"accordion-item\">\r\n        <h2 className=\"accordion-header\" id=\"flush-headingOne\">\r\n        <button className=\"accordion-button collapsed\" style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#flush-collapseOne\" aria-expanded=\"false\" aria-controls=\"flush-collapseOne\" >\r\n            Accordion Item #1\r\n        </button>\r\n        </h2>\r\n        <div id=\"flush-collapseOne\" className=\"accordion-collapse collapse\" aria-labelledby=\"flush-headingOne\" data-bs-parent=\"#accordionFlushExample\">\r\n        <div className=\"accordion-body\" style={myStyle}>Placeholder content for this accordion, which is intended to demonstrate the <code>.accordion-flush</code> className. This is the first item's accordion body.</div>\r\n        </div>\r\n    </div>\r\n    <div className=\"accordion-item\">\r\n        <h2 className=\"accordion-header\" id=\"flush-headingTwo\">\r\n        <button className=\"accordion-button collapsed\" style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#flush-collapseTwo\" aria-expanded=\"false\" aria-controls=\"flush-collapseTwo\">\r\n            Accordion Item #2\r\n        </button>\r\n        </h2>\r\n        <div id=\"flush-collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"flush-headingTwo\" data-bs-parent=\"#accordionFlushExample\">\r\n        <div className=\"accordion-body\" style={myStyle}>Placeholder content for this accordion, which is intended to demonstrate the <code>.accordion-flush</code> className. This is the second item's accordion body. Let's imagine this being filled with some actual content.</div>\r\n        </div>\r\n    </div>\r\n    <div className=\"accordion-item\">\r\n        <h2 className=\"accordion-header\" id=\"flush-headingThree\">\r\n        <button className=\"accordion-button collapsed\" style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#flush-collapseThree\" aria-expanded=\"false\" aria-controls=\"flush-collapseThree\">\r\n            Accordion Item #3\r\n        </button>\r\n        </h2>\r\n        <div id=\"flush-collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"flush-headingThree\" data-bs-parent=\"#accordionFlushExample\">\r\n        <div className=\"accordion-body\" style={myStyle}>Placeholder content for this accordion, which is intended to demonstrate the <code>.accordion-flush</code> className. This is the third item's accordion body. Nothing more exciting happening here in terms of content, but just filling up the space to make it look, at least at first glance, a bit more representative of how this would look in a real-world application.</div>\r\n        </div>\r\n    </div>\r\n          </div>\r\n            <button type='button' className='btn btn-primary my-3' onClick={enableDarkMode}>{btntext}</button>\r\n        </div>\r\n  )\r\n}\r\n","\nimport React from 'react';\nimport { useState } from 'react';\n// import About from './components/About';\nimport Alert from './components/Alert';\nimport Navbar from './components/Navbar';\nimport Textform from './components/Textform';\nimport About from './components/About'\nimport {Routes,Route} from 'react-router-dom'\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\")\n      document.body.style.backgroundColor = 'grey';\n      showAlert(\"Dark mode has been enabled\", \"success\");\n      document.title = \"Textutils Dark Mode\";\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"light mode has been enabled\",\"success\")\n      document.title = \"Textutils Light Mode\";\n    }\n  }\n  const showAlert = (message,type) => {\n    setAlert({\n      msg: message,\n      type:type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    },1500)\n  }\n  return (\n    <>\n      <Navbar mode={mode} toggleMode={toggleMode} showAlert={showAlert} /> \n      <Alert alert={alert} />\n     \n    \n        <Routes>\n          <Route  path=\"/about\" element={<About/>}></Route>\n          <Route  path=\"/\" element={<Textform heading=\"Enter text here to utilize\" mode={mode}  />}>\n          \n          </Route>\n       </Routes>\n     \n    </>\n      \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <BrowserRouter>\n  <React.StrictMode>\n    <App />\n    </React.StrictMode>\n    </BrowserRouter>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}