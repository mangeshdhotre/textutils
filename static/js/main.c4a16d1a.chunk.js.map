{"version":3,"sources":["components/Alert.js","components/Navbar.js","components/Textform.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","alert","react_default","a","createElement","className","concat","type","role","mstype","lower","toLowerCase","charAt","toUpperCase","slice","captialize","msg","Navbar","mode","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","onClick","toggleMode","htmlFor","placeholder","Textform","_useState","useState","_useState2","Object","slicedToArray","text","setText","style","color","heading","value","backgroundColor","onChange","event","target","rows","newText","totalWords","i","length","count","App","setMode","_useState3","_useState4","setAlert","showAlert","message","setTimeout","Fragment","document","body","title","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","dist","StrictMode","src_App"],"mappings":"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","file":"static/js/main.c4a16d1a.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const captialize = (mstype) => {\r\n        let lower = mstype.toLowerCase();\r\n        return lower.charAt(0).toUpperCase()+ lower.toLowerCase().slice(1);\r\n    }\r\n    return (\r\n        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{captialize(props.alert.type)}</strong> {props.alert.msg}\r\n            </div>\r\n  )\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Navbar(props) {\r\n  \r\n  return (\r\n    <nav\r\n      className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n    >\r\n      <div className=\"container-fluid \">\r\n        <h6 className=\"navbar-brand\">\r\n          Textutils\r\n        </h6>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            {/* <li className=\"nav-item\">\r\n              <a className=\"nav-a active text-dark\" aria-current=\"page\" href=\"/\">\r\n                Home\r\n              </a>\r\n            </li> */}\r\n            {/* <li className=\"nav-item\">\r\n              <a className=\"nav-a text-dark mx-2\" href=\"/about\">\r\n                About\r\n              </a>\r\n            </li> */}\r\n          </ul>\r\n          <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n            <input\r\n              className=\"form-check-input\"\r\n              type=\"checkbox\"\r\n              onClick={props.toggleMode}\r\n              id=\"flexSwitchCheckDefault\"\r\n            />\r\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">\r\n            Enable Dark Mode\r\n            </label>\r\n          </div>\r\n          \r\n          \r\n          <form className=\"d-flex\" role=\"search\">\r\n            <input\r\n              className=\"form-control me-2\"\r\n              type=\"search\"\r\n              placeholder=\"Search\"\r\n              // eslint-disable-next-line\r\n              role=\"switch\"\r\n              aria-label=\"Search\"\r\n            />\r\n            <button className=\"btn btn-outline-success\" type=\"submit\">\r\n              Search\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n","import React,{useState} from \"react\";\r\n\r\nexport default function Textform(props) {\r\n    const handleUpClick = () => {\r\n\r\n        let newText = text.toUpperCase()\r\n        setText(newText);\r\n    }\r\n    const handleLoClick = () => {\r\n\r\n        let newText = text.toLowerCase()\r\n        setText(newText);\r\n    }\r\n    const handleClearClick = () => {\r\n\r\n      let newText = '';\r\n        setText(newText);\r\n    }\r\n    const handleOnChange = (event) => {\r\n        // console.log(\" On Change\")\r\n        setText(event.target.value)\r\n    }\r\n  \r\n  const count = (text) => {\r\n    let totalWords= 0;\r\n    for (let i = 0; i < text.length; i++) {\r\n      \r\n      if (text[i]=== \" \") {\r\n        totalWords+=1\r\n      } \r\n      \r\n    }\r\n    return totalWords;\r\n   }\r\n\r\n    const [text, setText] = useState(\"\");\r\n    return (\r\n    <div className=\"container my-3 \" style={{color:props.mode === 'dark' ? 'white':'black'}}>\r\n      <h3>{props.heading}</h3>\r\n      <div className=\"mb-3\">\r\n          <textarea className=\"form-control\" value={text} style={{ backgroundColor: props.mode === 'light' ? 'white':'grey',color:props.mode === 'dark' ? 'white':'black'}} onChange={handleOnChange} id=\"myBox\" rows=\"8\" placeholder=\"Enter your text here...\"></textarea>\r\n      <button className=\"btn btn-primary my-2\" onClick={handleUpClick}>Convert to Uppercase</button>\r\n      <button className=\"btn btn-primary my-2 mx-2\" onClick={handleLoClick}>Convert to LowerCase</button>\r\n      <button className=\"btn btn-primary my-2 mx-2\" onClick={handleClearClick}>Clear Text</button>\r\n      </div>\r\n      <div>\r\n            <h3>Your text summary</h3>\r\n            <p>{count(text)} words and {text.length} charactrs</p>\r\n                <h2>Preview</h2>\r\n                <p>{text}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","\nimport React from 'react';\nimport { useState } from 'react';\n// import About from './components/About';\nimport Alert from './components/Alert';\nimport Navbar from './components/Navbar';\nimport Textform from './components/Textform';\n\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\")\n      document.body.style.backgroundColor = 'grey';\n      showAlert(\"Dark mode has been enabled\", \"success\");\n      document.title = \"Textutils Dark Mode\";\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"light mode has been enabled\",\"success\")\n      document.title = \"Textutils Light Mode\";\n    }\n  }\n  const showAlert = (message,type) => {\n    setAlert({\n      msg: message,\n      type:type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    },1500)\n  }\n  return (\n    <>\n      <Navbar mode={mode} toggleMode={toggleMode} showAlert={showAlert}  /> \n      <Alert alert={alert} />\n     \n    \n        {/* <Routes>\n          <Route  path=\"/about\" element={<About/>}></Route> */}\n      <Textform heading=\"Enter text here to utilize\" mode={mode}  />\n          \n          {/* </Route>\n       </Routes> */}\n     \n    </>\n      \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <BrowserRouter>\n  <React.StrictMode>\n    <App />\n    </React.StrictMode>\n    </BrowserRouter>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}